security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

#        saml_user_provider:
#            id: AerialShip\SamlSPBundle\Security\Core\User\DoMarceloUserProviderAdapter # implements UserManagerInterface
                        
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        saml:
            pattern: ^/
            anonymous: true
            aerial_ship_saml_sp:
                check_path: /saml/sp/acs
                logout_path: /saml/sp/logout
                local_logout_path: /logout
                provider: in_memory
                
                create_user_if_not_exists: false
                services:
                    nasajon_calendario:
                        idp:
                            file: "@NasajonCalendarioBundle/Resources/idp-FederationMetadata.xml"
                        sp:
                            config:
                                entity_id: nasajon_calendario
                            signing:
                                # or use built in SPSigningProviderFile with specific certificate and key files
                                cert_file: "@NasajonCalendarioBundle/Resources/server.crt"
                                key_file: "@NasajonCalendarioBundle/Resources/server.pem"
                                key_pass: ""
            logout:
                path: /logout
    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
